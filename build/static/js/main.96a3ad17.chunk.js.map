{"version":3,"sources":["lib/commerce.js","assets/green-logo.png","components/Navbar/styles.js","components/Navbar/Navbar.jsx","components/Products/Product/styles.js","components/Products/Product/Product.jsx","components/Products/styles.js","components/Products/Products.jsx","components/Cart/styles.js","components/Cart/CartItem/styles.js","components/Cart/CartItem/CartItem.jsx","components/Cart/Cart.jsx","components/CheckoutForm/Checkout/styles.js","components/CheckoutForm/Review.jsx","components/CheckoutForm/PaymentForm.jsx","components/CheckoutForm/CustomTextField.jsx","components/CheckoutForm/AddressForm.jsx","components/CheckoutForm/Checkout/Checkout.jsx","App.js","index.js"],"names":["commerce","Commerce","process","makeStyles","theme","appBar","boxShadow","borderBottom","breakpoints","up","width","marginLeft","title","flexGrow","alignItems","display","textDecoration","image","marginRight","menuButton","spacing","grow","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","searchIcon","padding","height","pointerEvents","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","Navbar","totalItems","classes","useStyles","location","useLocation","AppBar","className","Toolbar","Typography","component","Link","to","variant","src","logo","alt","pathname","button","IconButton","aria-label","Badge","badgeContent","ShoppingCart","root","maxWidth","media","paddingTop","cardActions","cardContent","Product","product","onAddToCart","Card","CardMedia","source","name","CardContent","gutterBottom","price","formatted_with_symbol","dangerouslySetInnerHTML","__html","description","CardActions","disableSpacing","area-label","onClick","id","AddShoppingCart","toolbar","mixins","content","background","default","Products","products","Grid","container","justify","map","item","xs","sm","md","lg","marginTop","emptyButton","minWidth","down","marginBottom","checkoutButton","link","cardDetails","cartActions","buttons","CartItem","onUpdateCartQty","onRemoveFromCart","line_total","classNAme","Button","type","size","quantity","Cart","cart","handleRemoveFromCart","handleUpdateCartQty","handleEmptyCart","EmptyCart","varient","FilledCart","line_items","subtotal","formated_with_symbol","Container","length","layout","paper","stepper","divider","margin","spinner","Review","checkoutToken","List","disablePadding","live","ListItem","style","ListItemText","primary","secondary","fontWeight","stripePromise","loadStripe","PaymentForm","shippingData","backStep","onCaptureCheckout","nextStep","timeout","handleSubmit","event","elements","stripe","a","preventDefault","cardElement","getElement","CardElement","createPaymentMethod","card","error","paymentMethod","console","log","orderData","customer","firstname","firstName","lastname","lastName","email","shipping","street","address1","town_city","city","county_state","shippingSubdivision","postal_zip_code","zip","country","shippingCountry","fulfillment","shipping_method","shippingOption","payment","gateway","payment_method_id","Divider","onSubmit","e","disabled","FormInput","label","control","useFormContext","as","TextField","defaultValue","fullWidth","required","AddressForm","next","methods","useForm","useState","shippingCountries","setShippingCountries","setShippingCountry","shippingSubdivisions","setShippingSubdivisions","setShippingSubdivision","shippingOptions","setShippingOptions","setShippingOption","countries","Object","entries","subdivisions","options","sO","fetchShippingCountries","checkoutTokenId","services","localeListShippingCountries","keys","fetchSubdivisions","countryCode","localeListSubdivisions","fetchShippingOptions","region","checkout","getShippingOptions","useEffect","data","InputLabel","Select","value","onChange","target","MenuItem","subdivision","option","steps","Checkout","order","activeStep","setActiveStep","setCheckoutToken","setShippingData","isFinished","history","useHistory","generateToken","token","pushState","prevActiveStep","setTimeout","Confirmation","customer_reference","CircularProgress","Form","CssBaseline","Paper","align","Stepper","step","Step","StepLabel","App","setProducts","setCart","setOrder","errorMessage","setErrorMessage","fetchProducts","list","fetchCart","retrieve","handleAddToCart","productId","add","update","remove","empty","refreshCart","refresh","newCart","handleCaptureCheckout","newOrder","capture","incomingOrder","message","total_items","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.96a3ad17.chunk.js","sourcesContent":["import Commerce from '@chec/commerce.js';\n\nexport const commerce = new Commerce(process.env.REACT_APP_CHEC_PUBLIC_KEY, true);","export default __webpack_public_path__ + \"static/media/green-logo.e0648df8.png\";","import { makeStyles, fade } from '@material-ui/core/styles';\n\nconst drawerWidth = 0;\n\nexport default makeStyles((theme) => ({\n    appBar: {\n        boxShadow: 'none',\n        borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\n        [theme.breakpoints.up('sm')]: {\n            width: `calc(100% - ${drawerWidth}px)`,\n            marginLeft: drawerWidth,\n        },\n    },\n    title: {\n        flexGrow: 1,\n        alignItems: 'center',\n        display: 'flex',\n        textDecoration: 'none',\n    },\n    image: {\n        marginRight: '10px',\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up('sm')]: {\n            display: 'none',\n        },\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('md')]: {\n            width: '20ch',\n        },\n    },\n}));","import React from 'react';\nimport { AppBar, Toolbar, IconButton, Badge, MenuItem, Menu, Typography } from '@material-ui/core';\nimport { ShoppingCart } from '@material-ui/icons';\nimport logo from '../../assets/green-logo.png';\nimport useStyles from './styles';\nimport { Link, useLocation } from 'react-router-dom';\n\n// prop of total number of items in the cart after adding\nconst Navbar = ({ totalItems }) => {\n    const classes = useStyles();\n    const location = useLocation();\n\n    return (\n        <>\n            <AppBar position=\"fixed\" className={classes.appBar} color='inherit'>\n                <Toolbar>\n                    <Typography component={Link} to=\"/\" variant=\"h6\" className={classes.title} color=\"inherit\">\n                        <img src={logo} alt=\"Anatolii.js\" height='25px' className={classes.image} />\n                        1-800-ANATOLII\n                    </Typography>\n                    <div className={classes.grow} />\n                    {/* shopping cart shows in Nav, once items added to shoping cart it doesn't show in Nav */}\n                    {location.pathname === '/' && (\n                        <div className={classes.button}>\n                            <IconButton component={Link} to=\"/cart\" aria-label=\"Show cart items\" color=\"inherit\">\n                                <Badge\n                                    // total items depending on how many items were added to the cart\n                                    badgeContent={totalItems}\n                                    color=\"secondary\">\n                                    <ShoppingCart />\n                                </Badge>\n                            </IconButton>\n                        </div>)}\n                </Toolbar>\n            </AppBar>\n        </>\n    )\n}\n\nexport default Navbar;\n","import { makeStyles } from '@material-ui/core/styles';\nexport default makeStyles(() => ({\n    root: {\n        maxWidth: '100%'\n    },\n    media: {\n        height: 0,\n        paddingTop: '56.25%', //16:9\n    },\n    cardActions: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    cardContent: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    }\n}));","import React from 'react';\nimport { Card, CardMedia, CardContent, CardActions, Typography, IconButton } from '@material-ui/core';\nimport { AddShoppingCart } from '@material-ui/icons';\nimport useStyles from './styles';\n// import classes from '*.module.css';\n\n//layout of one specific product/ add product to cart prop, then passed on Buttonclick below\nconst Product = ({ product, onAddToCart }) => {\n\n    const classes = useStyles();\n    // check which properties each product has from commerce.js\n    // console.log(product);\n    // return <div>test</div>\n\n    return (\n        <Card className={classes.root}>\n            <CardMedia className={classes.media} image={product.media.source} title={product.name} />\n            <CardContent>\n                <div className={classes.CardContent}>\n                    <Typography variant=\"h5\" gutterBottom>\n                        {product.name}\n                    </Typography>\n                    <Typography variant=\"h5\" gutterBottom>\n                        {product.price.formatted_with_symbol}\n                    </Typography>\n                </div>\n                <Typography\n                    dangerouslySetInnerHTML={{ __html: product.description }}\n                    variant=\"body2\"\n                    color=\"textSecondary\" />\n            </CardContent>\n            <CardActions disableSpacing className={classes.CardActions}>\n                <IconButton\n                    area-label=\"Add to Cart\"\n                    // items added to the cart prop with id and always 1 as quantity\n                    onClick={() => onAddToCart(product.id, 1)}\n                >\n                    <AddShoppingCart />\n                </IconButton>\n            </CardActions>\n        </Card>\n    )\n}\n\nexport default Product;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n    toolbar: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.default,\n        padding: theme.spacing(3),\n    },\n    root: {\n        flexGrow: 1,\n    },\n}));","import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport Product from './Product/Product';\nimport useStyles from './styles';\n\n// pass products as props, add to cart reflected in props\nconst Products = ({ products,onAddToCart }) => {\n    const classes = useStyles();\n\n    return (\n        <main className={classes.content}>\n            {/* keeps products from hiding under navbar */}\n            <div className={classes.toolbar} />\n            <Grid container justify=\"center\" spacing={4}>\n                {products.map((product) => (\n                    <Grid item key={product.id} xs={12} sm={6} md={4} lg={3}>\n                        <Product\n                         product={product}\n                        //  pass the function to add products to cart into Product component\n                        onAddToCart={onAddToCart}\n                          />\n                    </Grid>\n                ))}\n            </Grid>\n        </main>\n    )\n}\n\nexport default Products;","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n    toolbar: theme.mixins.toolbar,\n    title: {\n        marginTop: '5%',\n    },\n    emptyButton: {\n        minWidth: '150px',\n        [theme.breakpoints.down('xs')]: {\n            marginBottom: '5px',\n        },\n        [theme.breakpoints.up('xs')]: {\n            marginRight: '20px',\n        },\n    },\n    checkoutButton: {\n        minWidth: '150px',\n    },\n    link: {\n        textDecoration: 'none',\n    },\n    cardDetails: {\n        display: 'flex',\n        marginTop: '10%',\n        width: '100%',\n        justifyContent: 'space-between',\n    },\n}));","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles(() => ({\n    media: {\n        height: 260,\n    },\n    cardContent: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    cartActions: {\n        justifyContent: 'space-between',\n    },\n    buttons: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n}));","import React from 'react';\nimport { Typography, Button, Card, CardActions, CardContent, CardMedia } from '@material-ui/core';\nimport useStyles from './styles';\n\nconst CartItem = ({ item, onUpdateCartQty, onRemoveFromCart }) => {\n    const classes = useStyles();\n\n    return (\n        <Card>\n            <CardMedia image={item.media.source} alt={item.name} className={classes.media} />\n            <CardContent className={classes.cardContent}>\n                <Typography variant=\"h4\">{item.name}</Typography>\n                <Typography variant=\"h5\">{item.line_total.formatted_with_symbol}</Typography>\n            </CardContent>\n            <CardActions className={classes.cardActions}>\n                <div classNAme={classes.buttons}>\n                    <Button type=\"button\" size=\"small\" onClick={() => onUpdateCartQty(item.id, item.quantity - 1)}>-</Button>\n                    <Typography>{item.quantity}</Typography>\n                    <Button type=\"button\" size=\"small\" onClick={() => onUpdateCartQty(item.id, item.quantity + 1)}>+</Button>\n                </div>\n                <Button variant=\"contained\" type=\"button\" color=\"secondary\" onClick={() => onRemoveFromCart(item.id)}>Remove</Button>\n            </CardActions>\n        </Card>\n    )\n}\n\nexport default CartItem\n","import React from 'react';\nimport { Container, Typography, Button, Grid } from '@material-ui/core';\nimport useStyles from './styles';\nimport CartItem from './CartItem/CartItem';\nimport { Link } from 'react-router-dom';\n\n//  cart as a prop\nconst Cart = ({ cart, handleRemoveFromCart, handleUpdateCartQty, handleEmptyCart }) => {\n    // hook\n    const classes = useStyles();\n    // function that is returning jsx, displayed as subcomponent\n    const EmptyCart = () => (\n        <Typography varient=\"subtitle1\">You have no items in your shopping cart.\n            <Link to=\"/\" className={classes.link}>Start adding some</Link>!\n        </Typography>\n    );\n\n    const FilledCart = () => (\n        <>\n            <Grid container spacing={3}>\n                {cart.line_items.map((item) => (\n                    <Grid item xs={12} sm={4} key={item.id}>\n                        {/* looping through each item in the cart */}\n                        <CartItem item={item}\n                        onUpdateCartQty={handleUpdateCartQty}\n                        onRemoveFromCart={handleRemoveFromCart} />\n                    </Grid>\n                ))}\n            </Grid>\n            <div className={classes.cardDetails}>\n                <Typography variant=\"h4\">\n                    Subtotal: {cart.subtotal.formated_with_symbol}\n                </Typography>\n                <div>\n                    <Button className={classes.emptyButton}\n                        size=\"large\"\n                        type=\"button\"\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        onClick={handleEmptyCart}\n                    >Empty Cart</Button>\n                    <Button \n                    component={Link} to=\"/checkout\"\n                    className={classes.checkoutButton}\n                        size=\"large\"\n                        type=\"button\"\n                        variant=\"contained\"\n                        color=\"primary\">Checkout</Button>\n                </div>\n            </div>\n        </>\n    )\n    if (!cart.line_items) return 'Loading...';\n    return (\n        <Container>\n            <div className={classes.toolbar} />\n            <Typography className={classes.title} variant=\"h3\" gutterBottom>Your Shopping Cart</Typography>\n            {/* if statement to determine if the cart is empty */}\n            {!cart.line_items.length ? <EmptyCart /> : <FilledCart />}\n        </Container>\n    )\n}\n\nexport default Cart\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n    appBar: {\n        position: 'relative',\n    },\n    toolbar: theme.mixins.toolbar,\n    layout: {\n        marginTop: '5%',\n        width: 'auto',\n        marginLeft: theme.spacing(2),\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n            width: 600,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        },\n    },\n    paper: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n        padding: theme.spacing(2),\n        [theme.breakpoints.down('xs')]: {\n            width: '100%',\n            marginTop: 60,\n        },\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n            marginTop: theme.spacing(6),\n            marginBottom: theme.spacing(6),\n            padding: theme.spacing(3),\n        },\n    },\n    stepper: {\n        padding: theme.spacing(3, 0, 5),\n    },\n    buttons: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    button: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(1),\n    },\n    divider: {\n        margin: '20px 0',\n    },\n    spinner: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n}));","import React from 'react';\nimport { Typography, List, ListItem, ListItemText } from '@material-ui/core';\n\nconst Review = ({ checkoutToken }) => {\n    return (\n        <>\n            <Typography variant=\"h6\" gutterBottom>Order summary</Typography>\n            <List disablePadding>\n                {checkoutToken.live.line_items.map((product) => (\n                    <ListItem style={{ padding: '10px 0' }} key={product.name}>\n                        <ListItemText primary={product.name} secondary={`Quantity: ${product.quantity}`} />\n                        <Typography variant=\"body2\"> {product.line_total.formatted_with_symbol}</Typography>\n                    </ListItem>\n                ))}\n                <ListItem style={{ padding: '10px 0' }}>\n                    <ListItemText primary=\"Total\" />\n                    <Typography variant=\"subtitle1\" style={{ fontWeight: 700 }}>\n                        {checkoutToken.live.subtotal.formatted_with_symbol}</Typography>\n                </ListItem>\n            </List>\n        </>\n    )\n}\n\nexport default Review\n","import React from 'react';\nimport { Typography, Button, Divider } from '@material-ui/core';\nimport { Elements, CardElement, ElementsConsumer } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport Review from './Review';\n\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLIC_KEY);\n\nconst PaymentForm = ({ checkoutToken, shippingData, backStep, onCaptureCheckout, nextStep, timeout }) => {\n\n    const handleSubmit = async (event, elements, stripe) => {\n        event.preventDefault();\n\n        if (!stripe || !elements) return;\n\n        const cardElement = elements.getElement(CardElement);\n\n        const { error, paymentMethod } = await stripe.createPaymentMethod({ type: 'card', card: cardElement });\n\n        if (error) {\n            console.log(error);\n        } else {\n            // get all the data from order\n            const orderData = {\n                line_items: checkoutToken.live.line_items,\n                customer: {\n                    firstname: shippingData.firstName,\n                    lastname: shippingData.lastName,\n                    email: shippingData.email\n                },\n                shipping: {\n                    name: 'Primary',\n                    street: shippingData.address1,\n                    town_city: shippingData.city,\n                    county_state: shippingData.shippingSubdivision,\n                    postal_zip_code: shippingData.zip,\n                    country: shippingData.shippingCountry,\n                },\n                fulfillment: { shipping_method: shippingData.shippingOption },\n                payment: {\n                    gateway: 'stripe',\n                    stripe: {\n                        payment_method_id: paymentMethod.id\n                    }\n                }\n            }\n            onCaptureCheckout(checkoutToken.id, orderData);\n            timeout()\n            nextStep()\n        }\n    }\n    return (\n        <>\n            <Review checkoutToken={checkoutToken} />\n            <Divider />\n            <Typography variant=\"h6\" gutterBottom style={{ margin: '20px 0' }}>Payment method</Typography>\n            {/* stripe elements */}\n            <Elements stripe={stripePromise}>\n                <ElementsConsumer>\n                    {(elements, stripe) => (\n                        <form onSubmit={(e) => handleSubmit(e, elements, stripe)}>\n                            <CardElement />\n                            <br />\n                            <br />\n                            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                                <Button variant=\"outlined\" onClick={backStep}>Go back</Button>\n                                <Button variant=\"contained\" color='primary' type=\"submit\" disabled={!stripe}>\n                                    Pay {checkoutToken.live.subtotal.formatted_with_symbol}\n                                </Button>\n\n                            </div>\n                        </form>\n                    )}\n                </ElementsConsumer>\n            </Elements>\n        </>\n    )\n}\n\nexport default PaymentForm;\n","import React from 'react';\nimport { TextField, Grid } from '@material-ui/core';\nimport { useFormContext, Controller } from 'react-hook-form';\n\nconst FormInput = ({ name, label }) => {\n    const { control } = useFormContext();\n    const isError = false;\n\n    return (\n        <Grid item xs={12} sm={6}>\n            <Controller\n                as={TextField}\n                defaultValue=\"\"\n                control={control}\n                fullWidth\n                name={name}\n                label={label}\n                required\n                error={isError}\n            />\n        </Grid>\n    )\n}\n\nexport default FormInput;\n","import React, { useState, useEffect } from 'react';\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport FormInput from './CustomTextField';\nimport { commerce } from '../../lib/commerce';\nimport { Link } from 'react-router-dom';\n\nconst AddressForm = ({ checkoutToken, next }) => {\n    const methods = useForm();\n    const [shippingCountries, setShippingCountries] = useState([]);\n    const [shippingCountry, setShippingCountry] = useState('');\n    const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\n    const [shippingSubdivision, setShippingSubdivision] = useState('');\n    const [shippingOptions, setShippingOptions] = useState([]);\n    const [shippingOption, setShippingOption] = useState('');\n\n    //in console log see what's returned\n    const countries = Object.entries(shippingCountries).map(([code, name]) => ({ id: code, label: name }));\n    console.log(countries);\n    const subdivisions = Object.entries(shippingSubdivisions).map(([code, name]) => ({ id: code, label: name }));\n    // shipping oprions =sO\n    const options = shippingOptions.map((sO) => ({ id: sO.id, label: `${sO.description} -(${sO.price.formatted_with_symbol})` }))\n\n    //  -----COUNTRIES---------\n    const fetchShippingCountries = async (checkoutTokenId) => {\n        const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId);\n        // fetch API of all countries from commerce\n        console.log(countries);\n        setShippingCountries(countries);\n        setShippingCountry(Object.keys(countries)[0]);\n    }\n\n    // -----SUBDIV-------\n    const fetchSubdivisions = async (countryCode) => {\n        const { subdivisions } = await commerce.services.localeListSubdivisions(countryCode);\n        setShippingSubdivisions(subdivisions);\n        setShippingSubdivision(Object.keys(subdivisions)[0]);\n    }\n    // ------SHIPPING------\n    const fetchShippingOptions = async (checkoutTokenId, country, region = null) => {\n        const options = await commerce.checkout.getShippingOptions(checkoutTokenId, { country, region });\n\n        setShippingOptions(options);\n        setShippingOption(options[0]);\n        console.log(options[0]);//undefined\n        // setShippingOption(options[0].id);\n    }\n    useEffect(() => {\n        fetchShippingCountries(checkoutToken.id)\n    }, []);\n\n    useEffect(() => {\n        if (shippingCountry) fetchSubdivisions(shippingCountry);\n        // whenever shipping country chnages, call this subdiv\n    }, [shippingCountry]);\n\n    useEffect(() => {\n        if (shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\n    }, [shippingSubdivision])\n\n    return (\n        <>\n            <Typography variant=\"h6\" gutterBottom>Shipping Address</Typography>\n            <FormProvider {...methods}>\n                <form onSubmit={methods.handleSubmit((data) => next({ ...data, shippingCountry, shippingSubdivisions, setShippingOption }))}>\n                    <Grid container spacing={3}>\n                        <FormInput name='firstName' label='First name' />\n                        <FormInput name='lastName' label='Last name' />\n                        <FormInput name='address1' label='Address' />\n                        <FormInput name='email' label='Email' />\n                        <FormInput name='city' label='City' />\n                        <FormInput name='zip' label='Zip / Postal Code' />\n\n                        <Grid item xs={12} sm={6}>\n                            <InputLabel>Shipping Country</InputLabel>\n                            <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\n                                {/* map over all the countries on the list */}\n                                {countries.map((country) => (\n                                    <MenuItem key={country.id} value={country.id}>{country.label}</MenuItem>\n                                ))}\n                            </Select>\n                        </Grid>\n\n                        <Grid item xs={12} sm={6}>\n                            <InputLabel>Shipping Subdivision</InputLabel>\n                            <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\n                                {subdivisions.map((subdivision) => (\n                                    <MenuItem key={subdivision.id} value={subdivision.id}>{subdivision.label}</MenuItem>\n                                ))}\n                            </Select>\n                        </Grid>\n\n                        <Grid item xs={12} sm={6}>\n                            <InputLabel>Shipping Options</InputLabel>\n                            <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\n                                {options.map((option) => (\n                                    <MenuItem key={option.id} value={option.id}>{option.label}</MenuItem>\n                                ))}\n                            </Select>\n                        </Grid>\n                    </Grid>\n                    <br />\n                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                        <Button component={Link} to=\"/cart\" variant=\"outlined\">Back to Cart</Button>\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\">Next</Button>\n                    </div>\n                </form>\n            </FormProvider>\n        </>\n    )\n}\n\nexport default AddressForm;\n","import React, { useState, useEffect } from 'react';\nimport { Paper, Stepper, Step, StepLabel, Typography, CircularProgress, Divider, Button, CssBaseline } from '@material-ui/core';\nimport useStyles from './styles';\nimport PaymentForm from '../PaymentForm';\nimport AddressForm from '../AddressForm';\nimport { commerce } from '../../../lib/commerce';\nimport { Link, useHistory } from 'react-router-dom';\nconst steps = ['Shipping address', 'Payment details'];\n\nconst Checkout = ({ cart, order, onCaptureCheckout, error }) => {\n    const [activeStep, setActiveStep] = useState(0);\n    const [checkoutToken, setCheckoutToken] = useState(null);\n    const [shippingData, setShippingData] = useState({});\n    const [isFinished, setIsFinished] = useState(false);\n    const classes = useStyles();\n    const history = useHistory();\n\n    useEffect(() => {\n        const generateToken = async () => {\n            try {\n                const token = await commerce.checkout.generateToken(cart.id, { type: 'cart' });\n                console.log(token);\n                setCheckoutToken(token);\n            } catch (error) {\n                history.pushState('/')\n                // console.log(error)\n            }\n        }\n        generateToken();\n    }, [cart]);\n\n    const nextStep = () => setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    const backStep = () => setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    // in cart to go to next step =btn\n    const next = (data) => {\n        setShippingData(data);\n\n        nextStep();\n    }\n    //timeout for cc processing\n    const timeout = () => {\n        setTimeout(() => {\n            isFinished(true)\n            // console.log('Hello, World')\n        }, 3000);\n    }\n\n\n    let Confirmation = () => order.customer ? (\n        <>\n            <div>\n                <Typography variant=\"h5\">Thank you for your purchase, {order.customer.firstname} {order.customer.lastname} </Typography>\n                <Divider className={classes.divider} />\n                <Typography variant=\"subtitle2\">Order ref: {order.customer_reference}</Typography>\n            </div>\n            <br />\n            <Button component={Link} to=\"/\" variant=\"outlined\" type=\"button\"> Back to Home</Button>\n        </>\n    ) : isFinished ? (\n        // if don't want to use cc and use it for demo purposes, shows just confirm msg\n        <>\n        <div>\n            <Typography variant=\"h5\">Thank you for your purchase! </Typography>\n            <Divider className={classes.divider} />\n        </div>\n        <br />\n        <Button component={Link} to=\"/\" variant=\"outlined\" type=\"button\"> Back to Home</Button>\n    </> \n    ) : (\n        <div className = {classes.spinner}>\n            <CircularProgress />\n        </div >\n    )\nif (error) {\n    <>\n        <Typography variant=\"h5\">Error: {error}</Typography>\n        <br />\n        <Button component={Link} to=\"/\" variant=\"outlined\" type=\"button\"> Back to Home</Button>\n    </>\n}\n\nconst Form = () => activeStep === 0\n    // pass a prop for checkout\n    ? <AddressForm checkoutToken={checkoutToken} next={next} /> //first step\n    : <PaymentForm\n        shippingData={shippingData}\n        checkoutToken={checkoutToken}\n        nextStep={nextStep}\n        backStep={backStep}\n        onCaptureCheckout={onCaptureCheckout}\n        timeout={timeout} /> //second step\n\nreturn (\n    <>\n        <CssBaseline />\n        <div className={classes.toolbar} />\n        <main className={classes.layout}>\n            <Paper className={classes.paper}>\n                <Typography variant=\"h4\" align=\"center\">Checkout</Typography>\n                <Stepper activeStep={activeStep} className={classes.stepper}>\n                    {steps.map((step) => (\n                        <Step key={step}>\n                            <StepLabel>{step}</StepLabel>\n                        </Step>\n                    ))}\n                </Stepper>\n                {/* in on the last checkout step, move to payment=>confirmation, or back to Form */}\n                {activeStep === steps.length ? <Confirmation /> : checkoutToken && <Form />}\n            </Paper>\n        </main>\n    </>\n)\n}\n\nexport default Checkout;\n","import React, { useState, useEffect } from 'react';\n// commerce does all the backend\nimport { commerce } from './lib/commerce';\nimport { Products, Navbar, Cart, Checkout } from './components';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nconst App = () => {\n    const [products, setProducts] = useState([]);\n    // useState to add cart functionality\n    const [cart, setCart] = useState({});\n    // checkout\n    const [order, setOrder] = useState({});\n    //error handling \n    const [errorMessage, setErrorMessage] = useState('');\n\n    const fetchProducts = async () => {\n        // response=data\n        const { data } = await commerce.products.list();\n        setProducts(data);\n    }\n    // cart\n    const fetchCart = async () => {\n        setCart(await commerce.cart.retrieve())\n    }\n    //items in the cart with 2 parameters\n    const handleAddToCart = async (productId, quantity) => {\n        const { cart } = await commerce.cart.add(productId, quantity);\n        // update the cart\n        setCart(cart);\n    }\n    // update quantity in cart\n    const handleUpdateCartQty = async (productId, quantity) => {\n        const { cart } = await commerce.cart.update(productId, { quantity });\n        setCart(cart);\n    }\n    // remove items from cart\n    const handleRemoveFromCart = async (productId) => {\n        const { cart } = await commerce.cart.remove(productId);\n        setCart(cart);\n    }\n    const handleEmptyCart = async () => {\n        const { cart } = await commerce.cart.empty();\n        setCart(cart);\n    }\n    //this function is called after checkout to remove items from the cart\n    const refreshCart = async () => {\n        const newCart = await commerce.cart.refresh();\n        setCart(newCart);\n    }\n    //checkout\n    const handleCaptureCheckout = async (checkoutTokenId, newOrder) => {\n        try {\n            const incomingOrder = await commerce.checkout.capture(checkoutTokenId, newOrder);\n            setOrder(incomingOrder);\n            refreshCart();\n        } catch (error) {\n            setErrorMessage(error.data.error.message);\n        }\n    }\n\n    useEffect(() => {\n        fetchProducts();\n        fetchCart();\n    }, []);\n    console.log(cart);\n\n    return (\n        <Router>\n            <div>\n                <Navbar\n                    // pass total number of items in the cart after they were added\n                    totalItems={cart.total_items}\n                />\n                {/* switch between showing product or cart */}\n                <Switch>\n                    <Route exact path=\"/\">\n                        {/* pass products as props */}\n                        <Products products={products}\n                            // inside the Product component to change what's in the Cart\n                            onAddToCart={handleAddToCart} />\n                    </Route>\n                    <Route exact path=\"/cart\">\n                        <Cart cart={cart}\n                            handleUpdateCartQty={handleUpdateCartQty}\n                            handleRemoveFromCart={handleRemoveFromCart}\n                            handleEmptyCart={handleEmptyCart} />\n                    </Route>\n                    <Route exact path=\"/checkout\">\n                        <Checkout\n                            cart={cart}\n                            order={order}\n                            onCaptureCheckout={handleCaptureCheckout}\n                            error={errorMessage} />\n                    </Route>\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}